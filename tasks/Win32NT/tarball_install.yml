---

- name: Check zookeeper version
  fail:
    msg: "Unsupported version for this platform!"
  when: zk_version is version_compare('3.5.5', '==')

- name: Check if '{{ zk_dir }}' folder exists
  win_stat:
    path: '{{ zk_dir }}'
  register: zk_folder

- name: Install zookeeper from tarball
  block:

  - name: Install PSCX
    win_psmodule:
      name: Pscx
      state: present
      allow_clobber: true

  - name: 'Get artifact checksum file'
    win_uri:
      url: '{{ zk_url }}.{{ zk_checksum }}'
      return_content: true
    register: artifact_checksum_file

  - name: Debug artifact_checksum_file
    debug:
      var: artifact_checksum_file

  - name: Get artifact checksum
    set_fact:
      artifact_checksum: '{{ artifact_checksum_file.content.split(" ")[0] }}'

  - name: Debug artifact_checksum
    debug:
      var: artifact_checksum

  - name: 'Get sha512 checksum of file'
    win_stat:
      path: '{{ zk_tarball_dir }}\zookeeper-{{ zk_version }}.tar.gz'
      get_checksum: true
      checksum_algorithm: 'sha512'
    register: artifact

  - name: Download with checksum validation
    include_tasks: fetch_checksum.yml
    when: |
      not artifact.stat.exists
      or artifact.stat.checksum != artifact_checksum
    retries: 15
    delay: 2
    until: artifact.stat.checksum == artifact_checksum

  - name: Debug zk_tarball_dir
    debug:
      var: zk_tarball_dir

  - name: Create temporary directory
    win_tempfile:
      state: directory
    register: temp_dir_path

  - name: Unarchive to temporary directory
    win_unzip:
      src: '{{ zk_tarball_dir }}/zookeeper-{{ zk_version }}.tar.gz'
      dest: '{{ temp_dir_path }}'
      recurse: true

  - name: Debug temp_dir_path
    debug:
      var: temp_dir_path

  - name: Find zookeeper_folder in temp
    win_find:
      paths: '{{ temp_dir_path }}'
      recurse: false
      file_type: directory
    register: zoo_temp_folder

  - name: Debug zoo_temp_folder
    debug:
      var: zoo_temp_folder

  - name: Creates directory
    win_file:
      path: '{{ zk_dir }}'
      state: directory

  - name: Debug zk_dir
    debug:
      var: zk_dir

  - name: Copy from temporary directory
    win_copy:
      src: '{{ zoo_temp_folder.files | map(attribute="path") | list | last }}\'
      dest: '{{ zk_dir }}'
      remote_src: true

  when: not zk_folder.stat.exists
