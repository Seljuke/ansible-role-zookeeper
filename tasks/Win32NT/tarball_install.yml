---
# install zookeeper from tarball
- name: Check if '{{ zk_dir }}' folder exists
  win_stat:
    path: '{{ zk_dir }}'
  register: zk_folder

- name: Create log directory
  win_file:
      path: '{{ zk_log_dir }}'
      state: directory

- name: Creates directory
  win_file:
    path: '{{ zk_dir }}'
    state: directory

- name: Ensure the required NuGet package provider version is installed
  win_shell:
    free_form: Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force

- name: Install PSCX
  win_psmodule:
    name: Pscx
    state: present
    allow_clobber: true

- name: check if '{{ zk_tarball_dir }}/zookeeper-{{ zk_version }}.tar.gz' exists
  win_stat:
    path: '{{ zk_tarball_dir }}/zookeeper-{{ zk_version }}.tar.gz'
  register: zk_tar

- name: 'Get {{ zk_checksum }} for zookeeper {{ zk_version }}'
  set_fact:
    sha_value: '{{ sha_url_item }}'
  with_url: '{{ zk_url }}.{{ zk_checksum }}'
  loop_control:
    loop_var: sha_url_item
  when: not zk_tar.stat.exists

- name: 'Download zookeeper version {{ zk_version }}'
  win_get_url:
    url: '{{ zk_url }}'
    dest: '{{ zk_tarball_dir }}/zookeeper-{{ zk_version }}.tar.gz'
    checksum: '{{ zk_checksum }}:{{ sha_value.split(" ")[0] }}'
  register: result
  until: result is succeeded
  retries: 10
  delay: 2
  when: not zk_tar.stat.exists

- name: Unzip a tar.gz file
  win_unzip:
    src: '{{ zk_tarball_dir }}/zookeeper-{{ zk_version }}.tar.gz'
    dest: '{{ zk_tarball_dir }}'
    recurse: true
  when: not zk_tar.stat.exists

- name: Debug zk_tarball_dir
  debug:
    var: zk_tarball_dir

- name: Find zookeeper_folder in temp
  win_find:
    paths: '{{ zk_tarball_dir }}'
    recurse: false
    file_type: directory
  register: zoo_temp_folder

- name: Debug zoo_temp_folder
  debug:
    var: zoo_temp_folder

- name: Debug zk_dir
  debug:
    var: zk_dir

- name: Debug zk_folder
  debug:
    var: zk_folder

- name: Copy from temporary directory
  win_copy:
    src: '{{ zoo_temp_folder.files | map(attribute="path") | list | last }}\'
    dest: '{{ zk_dir }}'
    remote_src: true
  when: not zk_folder.stat.exists
