---
# install zookeeper from tarball
- name: Check if '{{ zk_dir }}' folder exists
  win_stat:
    path: '{{ zk_dir }}'
  register: zk_folder

- name: Create log directory
  win_file:
      path: '{{ zk_log_dir }}'
      state: directory

- name: Creates directory
  win_file:
    path: '{{ zk_dir }}'
    state: directory

- name: Debug zk_dir
  debug:
    var: zk_dir

- name: Install PSCX
  win_psmodule:
    name: Pscx
    state: present
    allow_clobber: true

# - name: check if '{{ zk_tarball_dir }}/zookeeper-{{ zk_version }}.tar.gz' exists
#   win_stat:
#     path: '{{ zk_tarball_dir }}/zookeeper-{{ zk_version }}.tar.gz'
#   register: zk_tar

# - name: 'Get {{ zk_checksum }} for zookeeper {{ zk_version }}'
#   set_fact:
#     sha_value: '{{ sha_url_item }}'
#   with_url: '{{ zk_url }}.{{ zk_checksum }}'
#   loop_control:
#     loop_var: sha_url_item
#   when: not zk_tar.stat.exists

# - name: 'Download zookeeper version {{ zk_version }}'
#   win_get_url:
#     url: '{{ zk_url }}'
#     dest: '{{ zk_tarball_dir }}/zookeeper-{{ zk_version }}.tar.gz'
#     ##checksum: '{{ zk_checksum }}:{{ sha_value.split(" ")[0] }}'
#     checksum_algorithm: '{{ zk_checksum }}'
#     checksum_url: '{{ zk_url }}.{{ zk_checksum }}'
#   register: result
#   until: result is succeeded
#   retries: 10
#   delay: 2
#   when: not zk_tar.stat.exists

####################################################################################
- name: 'Get artifact checksum file'
  win_uri:
    url: '{{ zk_url }}.{{ zk_checksum }}'
    return_content: true
  register: artifact_checksum_file

- name: Debug artifact_checksum_file
  debug:
    var: artifact_checksum_file

- name: Get artifact checksum
  set_fact:
    artifact_checksum: '{{ artifact_checksum_file.content.split(" ")[0] }}'

- name: Debug artifact_checksum
  debug:
    var: artifact_checksum

- name: 'Get sha512 checksum of file'
  win_stat:
    path: '{{ zk_tarball_dir }}\zookeeper-{{ zk_version }}.tar.gz'
    get_checksum: true
    checksum_algorithm: 'sha512'
  register: artifact

- name: Download with checksum validation
  include_tasks: fetch_checksum.yml
  when: |
    not artifact.stat.exists
    or artifact.stat.checksum != artifact_checksum
  retries: 15
  delay: 2
  until: artifact.stat.checksum == artifact_checksum
####################################################################################

- name: Debug zk_tarball_dir
  debug:
    var: zk_tarball_dir

- name: Unzip a tar.gz file
  win_unzip:
    src: '{{ zk_tarball_dir }}/zookeeper-{{ zk_version }}.tar.gz'
    dest: '{{ zk_tarball_dir }}'
    recurse: true
  #when: not zk_tar.stat.exists

- name: Debug zk_tarball_dir
  debug:
    var: zk_tarball_dir

- name: Find zookeeper_folder in temp
  win_find:
    paths: '{{ zk_tarball_dir }}'
    recurse: false
    file_type: directory
  register: zoo_temp_folder

- name: Debug zoo_temp_folder
  debug:
    var: zoo_temp_folder

- name: Copy from temporary directory
  win_copy:
    src: '{{ zoo_temp_folder.files | map(attribute="path") | list | last }}\'
    dest: '{{ zk_dir }}'
    remote_src: true
  when: not zk_folder.stat.exists
