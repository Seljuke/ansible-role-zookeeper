---
- name: Install and configure Zookeeper
  block:
  - name: Group creation
    group:
      name: '{{ zk_group }}'
      system: true

  - name: User creation
    user:
      name: '{{ zk_user }}'
      group: '{{ zk_group }}'
      system: true

  - name: 'Ensure the tarball dir exists at {{ zk_tarball_dir }}'
    file:
      path: '{{ zk_tarball_dir }}'
      state: directory
      owner: '{{ zk_user }}'
      group: '{{ zk_group }}'

  - name: 'Get {{ zk_checksum }} for zookeeper {{ zk_version }}'
    set_fact:
      sha_value: '{{ sha_url_item }}'
    with_url: '{{ zk_url }}.{{ zk_checksum }}'
    loop_control:
      loop_var: sha_url_item

  - name: 'Download zookeeper version {{ zk_version }}'
    get_url:
      url: '{{ zk_url }}'
      dest: '{{ zk_tarball_dir }}/zookeeper-{{ zk_version }}.tar.gz'
      checksum: '{{ zk_checksum }}:{{ sha_value.split(" ")[0] }}'
    register: result
    until: result is succeeded
    retries: 10
    delay: 2

  - name: Creates directory
    file:
      path: '{{ zk_dir }}'
      state: directory
      owner: '{{ zk_user }}'
      group: '{{ zk_group }}'

  - name: Creates directory symlink
    file:
      src: '{{ zk_dir }}'
      dest: '{{ zk_dir | replace("-" + zk_version, "") }}'
      state: link
      owner: '{{ zk_user }}'
      group: '{{ zk_group }}'
    when:
      - zk_dir | replace("-" + zk_version, "") != zk_dir

  - name: Unpack tarball
    unarchive:
      remote_src: true
      src: '{{ zk_tarball_dir }}/zookeeper-{{ zk_version }}.tar.gz'
      dest: '{{ zk_dir }}'
      extra_opts: '--strip-components=1'
      creates: '{{ zk_dir }}/conf'
      owner: '{{ zk_user }}'
      group: '{{ zk_group }}'

  - name: 'Create zookeeper {{ zk_version }} directory.'
    file:
      path: '{{ zoo_dir }}'
      state: directory
      owner: '{{ zk_user }}'
      group: '{{ zk_group }}'
    loop:
      - '{{ zk_data_dir }}'
      - '{{ zk_log_dir }}'
    loop_control:
      loop_var: zoo_dir

  - name: Write myid file
    template:
      src: myid.j2
      dest: '{{ zk_data_dir }}/myid'
      owner: '{{ zk_user }}'
      group: '{{ zk_group }}'
      force: '{{ zk_force_myid }}'
    notify:
      - restart Zookeeper

  # - name: Add zookeeper config files
  #   template:
  #     src: '{{ config }}.j2'
  #     dest: '{{ zk_dir }}/conf/{{ config }}'
  #     owner: '{{ zk_user }}'
  #     group: '{{ zk_group }}'
  #   loop: '{{ zk_config_file_list }}'
  #   loop_control:
  #     loop_var: config
  #   notify:
  #     - restart Zookeeper

  - name: Add zookeeper config files log4j.properties
    template:
      src: log4j.properties.j2
      dest: '{{ zk_dir }}/conf/log4j.properties'
      owner: '{{ zk_user }}'
      group: '{{ zk_group }}'
    notify:
      - restart Zookeeper

  - name: Add zookeeper config files zoo.cfg
    template:
      src: zoo.cfg.j2
      dest: '{{ zk_dir }}/conf/zoo.cfg'
      owner: '{{ zk_user }}'
      group: '{{ zk_group }}'
    notify:
      - restart Zookeeper

  - name: Add zookeeper config files zoo.cfg.dynamic
    template:
      src: zoo.cfg.dynamic.j2
      dest: '{{ zk_dir }}/conf/zoo.cfg.dynamic'
      owner: '{{ zk_user }}'
      group: '{{ zk_group }}'
    notify:
      - restart Zookeeper

  # - name: Read config file
  #   slurp:
  #     src: '{{ zk_dir }}/conf/zoo.cfg.dynamic'
  #   register: zooconfig
  #
  # - name: Debug config file
  #   debug:
  #     msg: '{{ zooconfig["content"] | b64decode }}'

  - name: Add zookeeper bin dir to the PATH
    template:
      src: zookeeper_path.sh.j2
      dest: /etc/profile.d/zookeeper_path.sh
      mode: 0755

  become: true

- name: Set system service
  include_tasks: '{{ service_manager }}'
  with_first_found:
    - 'service/{{ ansible_service_mgr }}.yml'
    - service/systemv.yml
  loop_control:
    loop_var: service_manager

# - name: restart Zookeeper
#   systemd:
#     name: zookeeper
#     state: restarted
#   become: true
#   when:
#     - zk_service_start
#
# - name: Read config file2
#   slurp:
#     src: '{{ zk_dir }}/conf/zoo.cfg.dynamic'
#   register: zooconfig2
#   become: true
#
# - name: Debug config file2
#   debug:
#     msg: '{{ zooconfig2["content"] | b64decode }}'
